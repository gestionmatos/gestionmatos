<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>